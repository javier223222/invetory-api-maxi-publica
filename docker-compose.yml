services:
  mongodb:
    image: mongo:7
    container_name: inventory_mongodb
    restart: unless-stopped
    ports:
      - "${MONGO_PORT}:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE}
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
    networks:
      - inventory_network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: inventory_api
    restart: unless-stopped
    ports:
      - "${PORT}:${PORT}"
    env_file:
      - .env
    command: sh -c "node dist/infrastructure/database/seed.js && node dist/infrastructure/web/express/server.js"
    volumes:
      - ./logs:/app/logs
      - ./public/uploads:/app/public/uploads
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - inventory_network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3001/api/health', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  inventory_network:
    driver: bridge

volumes:
  mongodb_data:
  mongodb_config:
